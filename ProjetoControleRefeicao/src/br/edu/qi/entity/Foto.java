package br.edu.qi.entity;
// Generated 29/11/2017 21:51:45 by Hibernate Tools 4.3.1

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Foto generated by hbm2java
 */
@Entity
@Table(name = "foto",
         catalog = "refeicao"
)
public class Foto implements java.io.Serializable {

    private Integer idFoto;
    private byte[] image;
    private Set<Refeicao> refeicaos = new HashSet<Refeicao>(0);

    public Foto() {
    }

    public Foto(byte[] image) {
        this.image = image;
    }

    public Foto(byte[] image, Set<Refeicao> refeicaos) {
        this.image = image;
        this.refeicaos = refeicaos;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id_foto", unique = true, nullable = false)
    public Integer getIdFoto() {
        return this.idFoto;
    }

    public void setIdFoto(Integer idFoto) {
        this.idFoto = idFoto;
    }

    @Column(name = "image", nullable = false)
    public byte[] getImage() {
        return this.image;
    }

    public void setImage(byte[] image) {
        this.image = image;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "foto")
    public Set<Refeicao> getRefeicaos() {
        return this.refeicaos;
    }

    public void setRefeicaos(Set<Refeicao> refeicaos) {
        this.refeicaos = refeicaos;
    }

    @Override
    public int hashCode() {
        int hash = 3;
        hash = 79 * hash + Arrays.hashCode(this.image);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Foto other = (Foto) obj;
        if (!Arrays.equals(this.image, other.image)) {
            return false;
        }
        return true;
    }

    

}
